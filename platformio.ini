; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32doit-devkit-v1]
platform = espressif32
board = esp32doit-devkit-v1
framework = arduino
board_microros_transport = wifi
lib_deps = 
    https://gitee.com/ohhuo/micro_ros_platformio.git


build_flags =
  -D CONFIG_FREERTOS_USE_TRACE_FACILITY=1
  -D CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS=1
  -D CONFIG_FREERTOS_GENERATE_RUN_TIME_STATS=1
  -D portCONFIGURE_TIMER_FOR_RUN_TIME_STATS=1
  -D CONFIG_FREERTOS_USE_STATS_FORMATTING_FUNCTIONS=1
  -D CONFIG_FREERTOS_RUN_TIME_STATS_USING_ESP_TIMER=1

  #define CONFIG_FREERTOS_USE_TRACE_FACILITY 1
#define CONFIG_FREERTOS_GENERATE_RUN_TIME_STATS 1
#define CONFIG_FREERTOS_USE_STATS_FORMATTING_FUNCTIONS 1

;  * configGENERATE_RUN_TIME_STATS and configUSE_STATS_FORMATTING_FUNCTIONS
;  * must both be defined as 1 for this function to be available.  The application
;  * must also then provide definitions for
;  * portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() and portGET_RUN_TIME_COUNTER_VALUE()
;  * to configure a peripheral timer/counter and return the timers current count
;  * value respectively.  The counter should be at least 10 times the frequency of
;  * the tick count.
;  *
;  * Setting configGENERATE_RUN_TIME_STATS to 1 will result in a total
;  * accumulated execution time being stored for each task.  The resolution
;  * of the accumulated time value depends on the frequency of the timer
;  * configured by the portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() macro.
;  * While uxTaskGetSystemState() and vTaskGetRunTimeStats() writes the total
;  * execution time of each task into a buffer, ulTaskGetIdleRunTimeCounter()
;  * returns the total execution time of just the idle task.
;  * configGENERATE_RUN_TIME_STATS and configUSE_STATS_FORMATTING_FUNCTIONS
;  * must both be defined as 1 for this function to be available.  The application
;  * must also then provide definitions for
;  * portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() and portGET_RUN_TIME_COUNTER_VALUE()
;  * to configure a peripheral timer/counter and return the timers current count
;  * value respectively.  The counter should be at least 10 times the frequency of
;  * the tick count.